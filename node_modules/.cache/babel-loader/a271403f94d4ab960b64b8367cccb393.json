{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\hp\\\\Downloads\\\\NewsApp-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import alanBtn from'@alan-ai/alan-sdk-web';import NewsCards from'./components/NewsCards/NewsCards';import wordsToNumbers from'words-to-numbers';import useStyle from'./styles';//alan API key generated after integrating with alan ai software(alan studio)\nvar alanKey='871bb42135775d06b86906a4b85681df2e956eca572e1d8b807a3e2338fdd0dc/stage';var App=function App(){var classes=useStyle();//state for all the articles from APTI and activeArticle\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),newsArticles=_useState2[0],setNewsArticles=_useState2[1];//We are starting from index 0 since this would be the index he would be currently reading\nvar _useState3=useState(-1),_useState4=_slicedToArray(_useState3,2),activeArticle=_useState4[0],setActiveArticle=_useState4[1];useEffect(function(){alanBtn({key:alanKey,onCommand:function onCommand(_ref){var command=_ref.command,articles=_ref.articles,number=_ref.number;if(command==='newHeadlines'){setNewsArticles(articles);//reset the activeArticle eachtime\nsetActiveArticle(-1);}else if(command==='highlight'){//We will change the state based on previous state\n//we set it by calling a callback that takes prevstate and gives the new one\n//React recommends, if you are changing the state based on prev state, you call it as a  callback fx\nsetActiveArticle(function(prevActiveArticle){return prevActiveArticle+1;});}else if({command:'open'}){//fuzzy: true, will help to parse the word closest to that number\n//for ===> four ==> 4\nvar parsedNumber=number.length>2?wordsToNumbers(number,{fuzzy:true}):number;var article=articles[parsedNumber-1];//we can only play 20 articles, make a check if we exceed the limit\nif(parsedNumber>20){alanBtn().playText('Please try that again');}else if(article){//open a new website based on link\nwindow.open(articles[parsedNumber].url,'_blank');alanBtn().playText('Opening the article');}}}});},[]);return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:classes.logoContainer},/*#__PURE__*/React.createElement(\"img\",{src:\"https://voicebot.ai/wp-content/uploads/2019/10/alan.jpg\",className:classes.alanLogo,alt:\"alan logo\"})),/*#__PURE__*/React.createElement(NewsCards,{articles:newsArticles,activeArticle:activeArticle}));};export default App;","map":{"version":3,"sources":["C:/Users/hp/Downloads/NewsApp-master/src/App.js"],"names":["React","useState","useEffect","alanBtn","NewsCards","wordsToNumbers","useStyle","alanKey","App","classes","newsArticles","setNewsArticles","activeArticle","setActiveArticle","key","onCommand","command","articles","number","prevActiveArticle","parsedNumber","length","fuzzy","article","playText","window","open","url","logoContainer","alanLogo"],"mappings":"8HAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,SAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kCAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CAIA;AACA,GAAMC,CAAAA,OAAO,CAAG,wEAAhB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACd,GAAMC,CAAAA,OAAO,CAAGH,QAAQ,EAAxB,CAEA;AAHc,cAI0BL,QAAQ,CAAC,EAAD,CAJlC,wCAIPS,YAJO,eAIOC,eAJP,eAKd;AALc,eAM4BV,QAAQ,CAAC,CAAC,CAAF,CANpC,yCAMPW,aANO,eAMQC,gBANR,eAQdX,SAAS,CAAC,UAAI,CACVC,OAAO,CAAC,CACJW,GAAG,CAAEP,OADD,CAEJQ,SAAS,CAAE,wBAAgC,IAA9BC,CAAAA,OAA8B,MAA9BA,OAA8B,CAArBC,QAAqB,MAArBA,QAAqB,CAAXC,MAAW,MAAXA,MAAW,CACvC,GAAGF,OAAO,GAAI,cAAd,CAA6B,CACzBL,eAAe,CAACM,QAAD,CAAf,CAEA;AACEJ,gBAAgB,CAAC,CAAC,CAAF,CAAhB,CACL,CALD,IAMK,IAAGG,OAAO,GAAG,WAAb,CAA0B,CAC3B;AACA;AACA;AACAH,gBAAgB,CAAC,SAACM,iBAAD,QAAqBA,CAAAA,iBAAiB,CAAG,CAAzC,EAAD,CAAhB,CACH,CALI,IAMA,IAAG,CAACH,OAAO,CAAC,MAAT,CAAH,CAAoB,CACrB;AACA;AACA,GAAMI,CAAAA,YAAY,CAAGF,MAAM,CAACG,MAAP,CAAgB,CAAhB,CAAoBhB,cAAc,CAACa,MAAD,CAAS,CAACI,KAAK,CAAC,IAAP,CAAT,CAAlC,CAA0DJ,MAA/E,CACA,GAAMK,CAAAA,OAAO,CAAGN,QAAQ,CAACG,YAAY,CAAE,CAAf,CAAxB,CAEA;AACA,GAAIA,YAAY,CAAC,EAAjB,CAAoB,CAChBjB,OAAO,GAAGqB,QAAV,CAAmB,uBAAnB,EACH,CAFD,IAEM,IAAGD,OAAH,CAAW,CACb;AACAE,MAAM,CAACC,IAAP,CAAYT,QAAQ,CAACG,YAAD,CAAR,CAAuBO,GAAnC,CAAuC,QAAvC,EACAxB,OAAO,GAAGqB,QAAV,CAAmB,qBAAnB,EACH,CACJ,CACJ,CA9BG,CAAD,CAAP,CAgCH,CAjCQ,CAiCN,EAjCM,CAAT,CAmCC,mBACI,4CACE,2BAAK,SAAS,CAAEf,OAAO,CAACmB,aAAxB,eACI,2BAAK,GAAG,CAAC,yDAAT,CAAmE,SAAS,CAAEnB,OAAO,CAACoB,QAAtF,CAAgG,GAAG,CAAE,WAArG,EADJ,CADF,cAII,oBAAC,SAAD,EAAW,QAAQ,CAAInB,YAAvB,CAAqC,aAAa,CAAEE,aAApD,EAJJ,CADJ,CAQJ,CAnDD,CAqDA,cAAeJ,CAAAA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport alanBtn from '@alan-ai/alan-sdk-web'\nimport NewsCards from './components/NewsCards/NewsCards';\nimport wordsToNumbers from 'words-to-numbers';\nimport useStyle from './styles'\n\n\n\n//alan API key generated after integrating with alan ai software(alan studio)\nconst alanKey = '871bb42135775d06b86906a4b85681df2e956eca572e1d8b807a3e2338fdd0dc/stage';\n\nconst App = () => {\n    const classes = useStyle()\n    \n    //state for all the articles from APTI and activeArticle\n    const [newsArticles, setNewsArticles] = useState([])\n    //We are starting from index 0 since this would be the index he would be currently reading\n    const [activeArticle, setActiveArticle] = useState(-1)\n    \n    useEffect(()=>{\n        alanBtn({\n            key: alanKey,\n            onCommand: ({command, articles, number})=> {\n                if(command ==='newHeadlines'){\n                    setNewsArticles(articles);\n\n                    //reset the activeArticle eachtime\n                      setActiveArticle(-1);              \n                }  \n                else if(command==='highlight') {\n                    //We will change the state based on previous state\n                    //we set it by calling a callback that takes prevstate and gives the new one\n                    //React recommends, if you are changing the state based on prev state, you call it as a  callback fx\n                    setActiveArticle((prevActiveArticle)=>prevActiveArticle + 1)\n                }\n                else if({command:'open'}){\n                    //fuzzy: true, will help to parse the word closest to that number\n                    //for ===> four ==> 4\n                    const parsedNumber = number.length > 2 ? wordsToNumbers(number, {fuzzy:true}): number\n                    const article = articles[parsedNumber -1];\n\n                    //we can only play 20 articles, make a check if we exceed the limit\n                    if (parsedNumber>20){\n                        alanBtn().playText('Please try that again')\n                    }else if(article){\n                        //open a new website based on link\n                        window.open(articles[parsedNumber].url,'_blank') \n                        alanBtn().playText('Opening the article')\n                    }                   \n                }\n            }\n        })\n    }, [])\n\n     return(\n         <div>  \n           <div className={classes.logoContainer}>\n               <img src='https://voicebot.ai/wp-content/uploads/2019/10/alan.jpg' className={classes.alanLogo} alt =\"alan logo\"/>\n           </div>\n             <NewsCards articles = {newsArticles} activeArticle={activeArticle}/>\n         </div>\n     )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}
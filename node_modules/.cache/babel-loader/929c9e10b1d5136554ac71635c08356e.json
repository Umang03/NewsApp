{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\NewsApp-master\\\\src\\\\components\\\\NewsCards\\\\NewsCards.js\";\nimport React from 'react';\nimport { Grid, Grow, Typography } from '@material-ui/core';\nimport NewsCard from '../NewsCard/NewsCard';\nimport useStyles from './styles.js'; //Information cards to make user understand Alan Ai app work flow with examples\n\nconst infoCards = [{\n  color: '#082348',\n  title: 'Latest News',\n  text: 'Give me the latest news...'\n}, {\n  color: '#1565c0',\n  title: 'News by Categories',\n  info: 'Entertainment, Health, Business, Science, Sports, Technology...',\n  text: 'Give me the latest Business news...'\n}, {\n  color: '#4527a0',\n  title: 'News by Terms',\n  info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...',\n  text: 'What\\'s up with Bitcoin...'\n}, {\n  color: '#283593',\n  title: 'News by Sources',\n  info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...',\n  text: 'Give me the news from CNN...'\n}];\n\nconst NewsCards = ({\n  articles,\n  activeArticle\n}) => {\n  const classes = useStyles();\n\n  if (!articles.length) {\n    return /*#__PURE__*/React.createElement(Grow, {\n      in: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: classes.container,\n      container: true,\n      alignItems: \"stretch\",\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, infoCards.map(infoCard => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      lg: 3,\n      className: classes.infoCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.card,\n      style: {\n        backgroundColor: infoCard.color\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      style: {\n        color: '#e9f0b9'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 84\n      }\n    }, infoCard.title)), infoCard.info ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 70\n      }\n    }, infoCard.title.split(\" \")[2], \":\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 119\n      }\n    }), infoCard.info) : /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 62\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 70\n      }\n    }, \"Alan at your service!\"))), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 61\n      }\n    }, \"Try saying:\"), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 96\n      }\n    }, infoCard.text)))))));\n  }\n\n  return /*#__PURE__*/React.createElement(Grow, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, articles && articles.map((article, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    lg: 3,\n    style: {\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(NewsCard, {\n    article: article,\n    activeArticle: activeArticle,\n    i: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default NewsCards;","map":{"version":3,"sources":["C:/Users/hp/Downloads/NewsApp-master/src/components/NewsCards/NewsCards.js"],"names":["React","Grid","Grow","Typography","NewsCard","useStyles","infoCards","color","title","text","info","NewsCards","articles","activeArticle","classes","length","container","map","infoCard","card","backgroundColor","split","article","i","display"],"mappings":";AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,UAApB,QAAqC,mBAArC;AAEA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AAEA,MAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,aAA3B;AAA0CC,EAAAA,IAAI,EAAE;AAAhD,CADc,EAEd;AAAEF,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,oBAA3B;AAAiDE,EAAAA,IAAI,EAAE,iEAAvD;AAA0HD,EAAAA,IAAI,EAAE;AAAhI,CAFc,EAGd;AAAEF,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,eAA3B;AAA4CE,EAAAA,IAAI,EAAE,sDAAlD;AAA0GD,EAAAA,IAAI,EAAE;AAAhH,CAHc,EAId;AAAEF,EAAAA,KAAK,EAAE,SAAT;AAAoBC,EAAAA,KAAK,EAAE,iBAA3B;AAA8CE,EAAAA,IAAI,EAAE,wDAApD;AAA8GD,EAAAA,IAAI,EAAE;AAApH,CAJc,CAAlB;;AAOA,MAAME,SAAS,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAA+B;AAE7C,QAAMC,OAAO,GAAET,SAAS,EAAxB;;AAEA,MAAG,CAACO,QAAQ,CAACG,MAAb,EAAoB;AAChB,wBACI,oBAAC,IAAD;AAAM,MAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAED,OAAO,CAACE,SAAzB;AAAoC,MAAA,SAAS,MAA7C;AAA8C,MAAA,UAAU,EAAE,SAA1D;AAAoE,MAAA,OAAO,EAAE,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKV,SAAS,CAACW,GAAV,CAAcC,QAAQ,iBACnB,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAyC,MAAA,SAAS,EAAEJ,OAAO,CAACI,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAEJ,OAAO,CAACK,IAAxB;AAA8B,MAAA,KAAK,EAAE;AAACC,QAAAA,eAAe,EAACF,QAAQ,CAACX;AAA1B,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAyB,MAAA,KAAK,EAAE;AAACA,QAAAA,KAAK,EAAC;AAAP,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASW,QAAQ,CAACV,KAAlB,CAAnD,CADJ,EAGQU,QAAQ,CAACR,IAAT,gBACC,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASQ,QAAQ,CAACV,KAAT,CAAea,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAT,MAAhC,oBAAiF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjF,EAAwFH,QAAQ,CAACR,IAAjG,CADD,gBAEA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAR,CAAzB,CALR,eAOI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA5B,oBAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzD,eAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIQ,QAAQ,CAACT,IAAb,CAA/D,CAPJ,CADJ,CADH,CADL,CADJ,CADJ;AAoBH;;AAED,sBACI,oBAAC,IAAD;AAAM,IAAA,EAAE,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEK,OAAO,CAACE,SAAzB;AAAoC,IAAA,SAAS,MAA7C;AAA8C,IAAA,UAAU,EAAE,SAA1D;AAAoE,IAAA,OAAO,EAAE,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QAAQ,IAAEA,QAAQ,CAACK,GAAT,CAAa,CAACK,OAAD,EAAUC,CAAV,kBACxB,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAwC,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAAC;AAAT,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAEF,OAAnB;AAA4B,IAAA,aAAa,EAAET,aAA3C;AAA0D,IAAA,CAAC,EAAEU,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADW,CADf,CADJ,CADJ;AAWH,CAtCD;;AAwCA,eAAeZ,SAAf","sourcesContent":["import  React from 'react';\nimport {Grid, Grow, Typography} from '@material-ui/core';\n\nimport NewsCard from '../NewsCard/NewsCard'\nimport useStyles from './styles.js'\n\n//Information cards to make user understand Alan Ai app work flow with examples\n\nconst infoCards = [\n    { color: '#082348', title: 'Latest News', text: 'Give me the latest news...' },\n    { color: '#1565c0', title: 'News by Categories', info: 'Entertainment, Health, Business, Science, Sports, Technology...', text: 'Give me the latest Business news...' },\n    { color: '#4527a0', title: 'News by Terms', info: 'Bitcoin, PlayStation 5, Smartphones, Donald Trump...', text: 'What\\'s up with Bitcoin...' },\n    { color: '#283593', title: 'News by Sources', info: 'CNN, Wired, BBC News, Time, IGN, Buzzfeed, ABC News...', text: 'Give me the news from CNN...' },\n  ];\n\nconst NewsCards = ({articles, activeArticle}) => {\n    \n    const classes= useStyles()\n\n    if(!articles.length){\n        return(\n            <Grow in>\n                <Grid className={classes.container} container alignItems= 'stretch' spacing={3}> \n                    {infoCards.map(infoCard =>(\n                        <Grid item xs={12} sm={6} md={4} lg={3}  className={classes.infoCard}>\n                            <div className={classes.card} style={{backgroundColor:infoCard.color}}>\n                                <Typography variant=\"h6\" style={{color:'#e9f0b9'}}><strong>{infoCard.title}</strong></Typography>\n                                {\n                                    infoCard.info ?\n                                    (<Typography variant=\"subtitle1\"><strong>{infoCard.title.split(\" \")[2]}:</strong> <br />{infoCard.info}</Typography>):\n                                    <Typography variant=\"h5\"><strong><i>Alan at your service!</i></strong></Typography>\n                                }\n                                <Typography variant=\"body2\"><strong>Try saying:</strong> <br /><i>{infoCard.text}</i></Typography>\n                            </div>\n                            {/* <InCard  infoCard = {infoCard}/> */}\n                        </Grid>\n                    ))}\n                </Grid>\n            </Grow>\n        )\n    }\n\n    return(\n        <Grow in> \n            <Grid className={classes.container} container alignItems= 'stretch' spacing={3}>\n                {articles&&articles.map((article, i) =>\n                <Grid item xs={12} sm={6} md={4} lg={3} style={{display:'flex'}} >\n                    <NewsCard article={article} activeArticle={activeArticle} i={i}/>\n                </Grid>\n                )}\n            </Grid>          \n        </Grow>\n    )\n} \n\nexport default NewsCards"]},"metadata":{},"sourceType":"module"}
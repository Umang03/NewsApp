{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\hp\\\\Downloads\\\\NewsApp-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createRef,useState,useEffect}from'react';import{Card,CardActions,CardActionArea,CardContent,CardMedia,Button,Typography}from'@material-ui/core';import useStyles from'./styles.js';import classNames from'classnames';var NewsCard=function NewsCard(_ref){var _ref$article=_ref.article,description=_ref$article.description,publishedAt=_ref$article.publishedAt,source=_ref$article.source,title=_ref$article.title,url=_ref$article.url,urlToImage=_ref$article.urlToImage,i=_ref.i,activeArticle=_ref.activeArticle;var classes=useStyles();//we need to set the ref to all our active cards to make the scrol work\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),elRefs=_useState2[0],setElRefs=_useState2[1];var scrollToRef=function scrollToRef(ref){return window.scroll(0,ref.current.offsetTop-50);};//x axis=0\n//We need to have refernce for all the cards, if we donot have it, we need to create one\n//We are going to do this only once when our component first mount\nuseEffect(function(){setElRefs(function(refs){return Array(20).fill().map(function(_,j){return refs[j]||createRef();});});},[]);//Now we have all the refs and we can scroll through them everytime\n//this useEffect will run everytime it reads an article and will run if there is any update in i, activearticle or elRefs\nuseEffect(function(){if(i===activeArticle&&elRefs[activeArticle]){scrollToRef(elRefs[activeArticle]);}},[i,activeArticle,elRefs]);return/*#__PURE__*/React.createElement(Card,{ref:elRefs[i],className:classNames(classes.card,activeArticle===i?classes.activeCard:null)},/*#__PURE__*/React.createElement(CardActionArea,{href:url,target:\"_blank\"},/*#__PURE__*/React.createElement(CardMedia,{className:classes.media,image:urlToImage||'https://www.indiafellow.org/blog/wp-content/uploads/2020/05/Marketplace-Lending-News.jpg'}),/*#__PURE__*/React.createElement(\"div\",{className:classes.details},/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"h2\"},new Date(publishedAt).toDateString()),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"h2\"},source.name)),/*#__PURE__*/React.createElement(Typography,{className:classes.title,gutterBottom:true,variant:\"h5\"},title),/*#__PURE__*/React.createElement(CardContent,null,/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\",component:\"p\"},description))),/*#__PURE__*/React.createElement(CardActions,{className:classes.cardActions},/*#__PURE__*/React.createElement(Button,{size:\"small\",color:\"primary\"},\"Learn More\"),/*#__PURE__*/React.createElement(Typography,{variant:\"body2\",color:\"textSecondary\"},\" Article: \",i+1)));};export default NewsCard;","map":{"version":3,"sources":["C:/Users/hp/Downloads/NewsApp-master/src/components/NewsCard/NewsCard.js"],"names":["React","createRef","useState","useEffect","Card","CardActions","CardActionArea","CardContent","CardMedia","Button","Typography","useStyles","classNames","NewsCard","article","description","publishedAt","source","title","url","urlToImage","i","activeArticle","classes","elRefs","setElRefs","scrollToRef","ref","window","scroll","current","offsetTop","refs","Array","fill","map","_","j","card","activeCard","media","details","Date","toDateString","name","cardActions"],"mappings":"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","sourcesContent":["import React, { createRef, useState, useEffect } from 'react';\nimport {Card, CardActions, CardActionArea, CardContent, CardMedia, Button, Typography} from '@material-ui/core';\nimport useStyles from './styles.js';\nimport classNames from 'classnames'\n\nconst NewsCard = ({article:{description, publishedAt, source, title, url, urlToImage }, i, activeArticle}) =>{\n    const classes = useStyles()\n    //we need to set the ref to all our active cards to make the scrol work\n    const [elRefs, setElRefs] = useState([])\n    const scrollToRef = (ref)=> window.scroll(0, ref.current.offsetTop - 50); //x axis=0\n\n\n    //We need to have refernce for all the cards, if we donot have it, we need to create one\n    //We are going to do this only once when our component first mount\n    useEffect(()=>{\n        setElRefs((refs)=>Array(20).fill().map((_,j)=>refs[j] || createRef()));\n    },[])\n\n    //Now we have all the refs and we can scroll through them everytime\n    //this useEffect will run everytime it reads an article and will run if there is any update in i, activearticle or elRefs\n    useEffect(()=>{\n        if(i===activeArticle && elRefs[activeArticle]){\n            scrollToRef(elRefs[activeArticle])\n        }\n    }, [i, activeArticle, elRefs])\n\n    return (\n        <Card ref = {elRefs[i]} className={classNames(classes.card, activeArticle ===i ? classes.activeCard:null)}>\n            <CardActionArea href={url} target=\"_blank\">  \n                <CardMedia className={classes.media} image={urlToImage || 'https://www.indiafellow.org/blog/wp-content/uploads/2020/05/Marketplace-Lending-News.jpg'} />\n                <div className={classes.details}>\n                    <Typography variant='body2' color='textSecondary' component='h2'>{(new Date(publishedAt)).toDateString()}</Typography>\n                    <Typography variant='body2' color= 'textSecondary' component='h2'>{source.name}</Typography>\n                </div>\n                <Typography className={classes.title} gutterBottom variant={\"h5\"}>{title}</Typography>\n                <CardContent>\n                    <Typography variant={\"body2\"} color={\"textSecondary\"} component='p' >{description}</Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions className={classes.cardActions}>\n                <Button size='small' color='primary'>Learn More</Button>                \n                <Typography variant={\"body2\"} color={\"textSecondary\"} > Article: { i + 1 }</Typography>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default NewsCard"]},"metadata":{},"sourceType":"module"}